Rect startBounds = new Rect();
Point globalOffset = new Point();
view.getGlobalVisibleRect(startBounds,globalOffset);
getGlobalVisibleRect可以得到gaiview在整个界面中上下左右边距赋给rect，point是左上角的坐标

view.setPivotX(0f);
view.setPivotY(0f);

AnimatorSet set = new AnimatorSet();
set
     .play(ObjectAnimator.ofFloat(expandedImageView, View.X, startBounds.left,
             finalBounds.left))
     .with(ObjectAnimator.ofFloat(expandedImageView, View.Y, startBounds.top,
             finalBounds.top))
     .with(ObjectAnimator.ofFloat(expandedImageView, View.SCALE_X, startScale, 1f))
     .with(ObjectAnimator.ofFloat(expandedImageView, View.SCALE_Y, startScale, 1f));
set.setInterpolator(new DecelerateInterpolator());
以view的(0,0)左边为支点进行动画


当view发送改变时候，可以加入改变的动画
1.android:animateLayoutChanges="true", 该view需要有这个属性
2.如果要自定义动画， create a LayoutTransition object and supply it to the layout with the setLayoutTransition() method.


在 onCreate()中执行finish()会立刻调用onDestroy()，而不调用任何其他 生命周期方法。极端情况下，系统可能会仅终止应用进程，而不会调用Activity的最终 onDestroy() 回调，因此您使用 onStop() 释放可能泄露内存的资源非常重要。

onRestoreInstanceState()方法在onStart()之后调用，在onCreate()之前，所以恢复也可以选择前者，两者的区别在于onRestoreInstanceState()不需要自己判断是否为空，而且onCreate()则需要。
