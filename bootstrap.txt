标题: <h1> ... <h6> <.h1> ... <.h6>
副标题: <samll> <.small>
段落和强调: <p> class =".lead" 增大加粗字体
粗体: <b> <strong>
斜体: <em> <i>

bootstrap中特定类名: 
                     .text-muted：提示，使用浅灰色（#999）
                     .text-primary：主要，使用蓝色（#428bca）
                     .text-success：成功，使用浅绿色(#3c763d)
                     .text-info：通知信息，使用浅蓝色（#31708f）
                     .text-warning：警告，使用黄色（#8a6d3b）
                     .text-danger：危险，使用褐色（#a94442）

text-align: left;center;right;justify(两端对齐) 对应BS中.text-left;.text-center;text-right;text-justify

标准3种列表:
无序：<ul><li>...</li></ul>
有序：<ol><li>...</li></ol>
定义列表：<dl><dt>...</dt><dd></dd></dl>

去列表点 class="list-unstyled"

内联列表 class="list-inline"(相当于li水平显示，display:inline-block)

显示代码背景颜色：<code><pre>(单行和多行，背景有颜色),<kbd>(背景黑色，键盘输入提示) .pre-scrollable定义<pre>带滚动


表格
<table class="">
<thread><tr><th></th><th></th></tr></thread>
<tbody><tr><td></td></tr></tbody>
</table>

<table class="以下"></table>
.table：基础表格

.table-striped：斑马线表格(原理:nth-child)

.table-bordered：带边框的表格
原理
.table-bordered > tfoot > tr > td {
  border: 1px solid #ddd; /*每个单元格设置边框*/
}

.table-hover：鼠标悬停高亮的表格
原理:
.table-hover > tbody > tr:hover > th {
background-color: #f5f5f5;
}

.table-condensed：紧凑型表格
原理：
.table-condensed > tfoot > tr > td {
padding: 5px;
}(减小padding)

.table-responsive：响应式表格
用法:
<div class="table-responsive">
<table class="table table-bordered">
   …
</table>
</div>


----------------------------------表单

.form-control 对input样式进行了改变

.form-horizontal和.form-group，水平表单，form-group可以看作row

.form-inline内联表单，相当于显示在同一行

input

<select multiple class="form-control">
    <option>1</option>
    <option>2</option>
    <option>3</option>
    <option>4</option>
    <option>5</option>
 </select>
 
 <textarea class="form-control" rows="3" col=""></textarea> form-control样式的表单控件宽度为100%或auto，无需col

 checkbox和radio需要按以下用法:(也可以加在label上)
<div class="checkbox">
	<label>
	<input type="checkbox" value="">
	记住密码
	</label>
</div>

<div class="radio">
	<label>
	<input type="radio" name="optionsRadios" id="optionsRadios1" value="love" checked>
	喜欢
	</label>
</div>

内联，也就是水平排列，需以下这样加，否则布局会有重叠
<div class="form-group">
    <label class="checkbox-inline">
      <input type="checkbox"  value="option1">游戏
    </label>
    <label class="checkbox-inline">
      <input type="checkbox"  value="option2">摄影
    </label>
    <label class="checkbox-inline">
    <input type="checkbox"  value="option3">旅游
    </label>
  </div>

  按钮，用<button class="btn xxxxx">这样

.input-sm:让控件比正常大小更小
.input-lg:让控件比正常大小更大

要让控件在焦点状态下有上面样式效果，需要给控件添加类名“form-control”

<fieldset disabled>可以对包含在里面的整个内容都禁用

.has-warning:警告状态（黄色）
.has-error：错误状态（红色）   
.has-success：成功状态（绿色）
上述3种状态可以和has-feedback联合使用

.help-block相当于定制过的span

text-shadow 文本阴影
box-shadow  边框阴影

<button class="btn" type="button">基础按钮.btn</button>  
<button class="btn btn-default" type="button">默认按钮.btn-default</button> 
<button class="btn btn-primary" type="button">主要按钮.btn-primary</button> 
<button class="btn btn-success" type="button">成功按钮.btn-success</button> 
<button class="btn btn-info" type="button">信息按钮.btn-info</button> 
<button class="btn btn-warning" type="button">警告按钮.btn-warning</button> 
<button class="btn btn-danger" type="button">危险按钮.btn-danger</button> 
<button class="btn btn-link" type="button">链接按钮.btn-link</button>

除了button ，a也可以，其他如input，span，div都可以，但不建议使用

.btn-lg 大型按钮
.btn-sm 小型按钮
.btn-xs 超小型按钮

.btn-block宽度充满父容器
原理:
.btn-block {
display: block;
width: 100%;
padding-right: 0;
padding-left: 0;
}
.btn-block + .btn-block {
margin-top: 5px;
}
input[type="submit"].btn-block,
input[type="reset"].btn-block,
input[type="button"].btn-block {
width: 100%;
}

<button>的禁用，用样式.disabled只是看上去禁用，实际不会禁用，disabled="disabled"则可以全部实现

图片形状
<img class="">
1、img-responsive：响应式图片，主要针对于响应式设计
2、img-rounded：圆角图片
3、img-circle：圆形图片
4、img-thumbnail：缩略图片


<span class="glyphicon glyphicon-search"></span>
所有icon都是以”glyphicon-”前缀的类名开始，然后后缀表示图标的名称


列数不可超过12
<div class="container">
  <div class="row">
    <div class="col-md-4">.col-md-4</div>
    <div class="col-md-8">.col-md-8</div>
  </div>
</div>


<div class="col-md-2 col-md-offset-4">列偏移

“col-md-push-*”和“col-md-pull-* 右移和左移，right和left

行中可以嵌套列，但是可能会换行


下拉菜单，与selected不同，和android的spinner类似
<div class="dropdown"> //这里div如果外层是一个btn-group按钮组，dropdown也可以换成btn-group
<button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">注意div的类名dropdown和data-toggle要一样
下拉菜单
<span class="caret"></span>
</button>
<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
   <li role="presentation"><a role="menuitem" tabindex="-1" href="#">下拉菜单项</a></li>
   …
   <li role="presentation" class="divider"></li>
   <li role="presentation"><a role="menuitem" tabindex="-1" href="#">下拉菜单项</a></li>
</ul>
</div>


<li role="presentation" class="divider"></li>下拉菜单项中的分割线
 原理：
  .dropdown-menu .divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #e5e5e5;
}

  <li role="presentation" class="dropdown-header">菜单头部</li>

  .pull-right和.dropdown-menu-right下拉框右对齐
默认的其实就是.dropdown-menu-left


悬浮状态（:hover)
焦点状态（:focus) 这两项不用设置

当前状态（.active)
禁用状态（.disabled)
例子：
 <li role="presentation" class="active"><a role="menuitem" tabindex="-1" href="#">下拉菜单项</a></li>


一组带图标按钮,放在.btn-group(.btn-group-vertical 垂直分组)的div里面，button按钮也可以换成a标签,但是必须都带有.btn. .btn-group-lg .btn-group-sm .btn-group-xs
<div class="btn-group">
<button type="button" class="btn btn-default">
     <span class="glyphicon glyphicon-step-backward"></span>
</button>
</div>
下面是原理，有空可以仔细看看：
1、默认所有按钮都有圆角
2、除第一个按钮和最后一个按钮（下拉按钮除外），其他的按钮都取消圆角效果
3、第一个按钮只留左上角和左下角是圆角
4、最后一个按钮只留右上角和右下角是圆角

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
  border-radius: 0;
}
.btn-group > .btn:first-child {
  margin-left: 0;
}
.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group > .btn-group {
  float: left;
}
.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}
.btn-group > .btn-group:first-child> .btn:last-child,
.btn-group > .btn-group:first-child> .dropdown-toggle {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn-group:last-child> .btn:first-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}


工具栏样式，也就是工具栏中包按钮组
<div class="btn-toolbar">
  <div class="btn-group">
    …
  </div>
</div>

.btn-group中的按钮宽度等分,可以用btn-group-justified
原理:把“btn-group-justified”模拟成表格（display:table），而且把里面的按钮模拟成表格单元格（display:table-cell)
.btn-group-justified {
  display: table;
  width: 100%;
  table-layout: fixed;
  border-collapse: separate;
}
.btn-group-justified > .btn,
.btn-group-justified > .btn-group {
  display: table-cell;
  float: none;
  width: 1%;
}
.btn-group-justified > .btn-group .btn {
  width: 100%;
}


.dropup类，下拉菜单的向上三角
<div class="btn-group dropup">...</div>
原理：比较向上和向下，向下主要将“dropdown-menu”的top值变成了auto，而把bottom值换成了100%：
向上：
.dropup .dropdown-menu,
.navbar-fixed-bottom .dropdown .dropdown-menu {
  top: auto;
  bottom: 100%;
  margin-bottom: 1px;
}
向下：
.dropdown-menu {
  position: absolute;/*设置绝对定位，相对于父元素div.dropdown*/
  top: 100%;/*让下拉菜单项在父菜单项底部，如果父元素不设置相对定位，该元素相对于body元素*/
  left: 0;
  z-index: 1000;/*让下拉菜单项不被其他元素遮盖住*/
  display: none;/*默认隐藏下拉菜单项*/
。。。。。。。。。。。。。
}

导航.nav 加上一个类可以组成导航
<ul class="nav nav-tabs">
    <li><a href="##" class="active">Home</a></li>  //.active当前选项
    <li><a href="##">CSS3</a></li>
    <li><a href="##">Sass</a></li>
    <li><a href="##">jQuery</a></li>
    <li class="nav-divider"></li>  //.nav-divider 分割线
    <li><a href="##" class="disabled">Responsive</a></li> //.disabled非选中状态
</ul>

1 .nav-tabs  标签形  <ul class="nav nav-tabs">
2 .nav-pills 胶囊形  <ul class="nav nav-pills">
3 .nav-stacked 垂直堆叠导航  <ul class="nav nav-pills nav-stacked">
4 .nav-justified 自适应导航 配合nav-tabs或者nav-pills使用 <ul class="nav nav-tabs nav-justified">


导航栏中二级菜单，在某个li中加入dropdown就可以了
<li class="dropdown">
      <a href="##" class="dropdown-toggle" data-toggle="dropdown">教程<span class="caret"></span></a>
      <ul class="dropdown-menu">
          <li><a href="##">CSS3</a></li>
        <li><a href="##">Sass</a></li>
        <li><a href="##">jQuery</a></li>
        <li><a href="##">Responsive</a></li>
      </ul>
  </li>


5 .breadcrumb   面包屑式导航
<ol class="breadcrumb">
  <li><a href="#">首页</a></li>
  <li><a href="#">我的书</a></li>
  <li class="active">《图解CSS3》</li>
</ol>
原理:
.breadcrumb> li + li:before {
padding: 0 5px;
color: #ccc;
content: "/\00a0";
}
实现li与li之间的分隔符，不支持IE低版本



基础导航条
<div class="navbar navbar-default" role="navigation">
    <div class="navbar-header"> 
  　    <a href="##" class="navbar-brand">慕课网</a>
  　</div>
     <ul class="nav navbar-nav">
        <li class="active"><a href="##">网站首页</a></li>
        <li><a href="##">系列教程</a></li>
        <li><a href="##">名师介绍</a></li>
        <li><a href="##">成功案例</a></li>
        <li class="dropdown">
          <a href="##" data-toggle="dropdown" class="dropdown-toggle">系列教程<span class="caret"></span></a>
          <ul class="dropdown-menu">
          <li><a href="##">CSS3</a></li>
          <li><a href="##">JavaScript</a></li>
          <li class="disabled"><a href="##">PHP</a></li>
          </ul>
       </li>
        <li><a href="##">关于我们</a></li>
   </ul>
   <form action="##" class="navbar-form navbar-left" rol="search">
        <div class="form-group">
         <input type="text" class="form-control" placeholder="请输入关键词" />
        </div>
        <button type="submit" class="btn btn-default">搜索</button>
     </form>
</div>
外层.navbar定义边距等，.navbar-default定义颜色,内层在.nav的基础上，通过navbar-nav调整样式
div的.navbar-header和a标签的.navbar-brand是加入head，二级菜单也是在某个li中加入dropdown就可以了
在导航栏中放置表单，如上form中就是，加入.navbar-form就可以.navbar-left是让表单左浮,还有.navbar-right

导航栏中一般标签用的css
a:       .navbar-brand
ul:      .navabr-nav
form:    .navabr-form
button:  .navbar-btn
text  :  .navbar-text
link:    .navbar-link
都可以放在a或者button里面

固定在顶部:  .navbar-fixed-top
固定在底部:  .navbar-fixed-bottom
默认高度是50px，如果遮住内容，可以上下padding 70px左右

响应式导航
<div class="navbar navbar-default" role="navigation">
  <div class="navbar-header">
     　<!-- .navbar-toggle样式用于toggle收缩的内容，即nav-collapse collapse样式所在元素 -->
       <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#ddc"> //这里data-target可以是下面的id，也就是ddc，也可以是下面class中navbar-responsive-collapse，写成.navbar-responsive-collapse
         <span class="sr-only">Toggle Navigation</span>
         <span class="icon-bar"></span>
         <span class="icon-bar"></span>
         <span class="icon-bar"></span>
       </button>
       <!-- 确保无论是宽屏还是窄屏，navbar-brand都显示 -->
       <a href="##" class="navbar-brand">慕课网</a>
  </div>
  <!-- 屏幕宽度小于768px时，div.navbar-responsive-collapse容器里的内容都会隐藏，显示icon-bar图标，当点击icon-bar图标时，再展开。屏幕大于768px时，默认显示。 -->
  <div class="collapse navbar-collapse navbar-responsive-collapse" id="ddc"> //这里的class必须包含collapse navbar-collapse两项
      <ul class="nav navbar-nav">
          <li class="active"><a href="##">网站首页</a></li>
          <li><a href="##">系列教程</a></li>
          <li><a href="##">名师介绍</a></li>
          <li><a href="##">成功案例</a></li>
          <li><a href="##">关于我们</a></li>
    </ul>
  </div>
</div>

反色导航条.navbar-inverse,与.navbar-default一样，可以理解成就是颜色不同


分页导航: pagination-lg表示大，pagination-sm表示小
<ul class="pagination pagination-lg">
  <li><a href="#">&laquo;第一页</a></li>
  <li><a href="#">11</a></li>
  <li><a href="#">12</a></li>
  <li class="active"><a href="#">13</a></li>
  <li><a href="#">14</a></li>
  <li><a href="#">15</a></li>
  <li class="disabled"><a href="#">最后一页&raquo;</a></li>
</ul> 
原理: 用ul>li>a来制作的,div>a和div>span也可以制作


翻页导航: 就上一页和下一页
<ul class="pager">
   <li><a href="#">&laquo;上一页</a></li>
   <li><a href="#">下一页&raquo;</a></li>
</ul>

标签：
<span class="label label-default">默认标签</span>
<span class="label label-primary">主要标签</span>
<span class="label label-success">成功标签</span>
<span class="label label-info">信息标签</span>
<span class="label label-warning">警告标签</span>
<span class="label label-danger">错误标签</span>

徽章:
<a href="#">Inbox <span class="badge">42</span></a>

缩略图:
<div class="container">
    <div class="row">
        <div class="col-xs-12 col-md-6">  //小屏幕下一行1列，大屏幕下一行2列
            <a href="#" class="thumbnail">
              <img src="http://img.mukewang.com/5434eba100014fe906000338.png" style="height: 180px; width: 100%; display: block;" alt="">
            </a>
            <div class="caption">
                <h3>Bootstrap框架系列教程</h3>
                <p>Bootstrap框架是一个优秀的前端框，就算您是一位后端程序员或者你是一位不懂设计的前端人员，你也能依赖于Bootstrap制作做优美的网站...</p>
                <p>
                  <a href="##" class="btn btn-primary">开始学习</a>
                  <a href="##" class="btn btn-info">正在学习</a>
                </p>
            </div
        </div>
        <div class="col-xs-12 col-md-6">
            <a href="#" class="thumbnail">
              <img src="http://img.mukewang.com/5434eba100014fe906000338.png" style="height: 180px; width: 100%; display: block;" alt="">
            </a>
            <div class="caption">
                <h3>Bootstrap框架系列教程</h3>
                <p>Bootstrap框架是一个优秀的前端框，就算您是一位后端程序员或者你是一位不懂设计的前端人员，你也能依赖于Bootstrap制作做优美的网站...</p>
                <p>
                  <a href="##" class="btn btn-primary">开始学习</a>
                  <a href="##" class="btn btn-info">正在学习</a>
                </p>
            </div
        </div> 
    </div>
</div>


警告：
<div class="alert alert-success" role="alert">恭喜您操作成功！</div>
<div class="alert alert-info" role="alert">请输入正确的密码</div>
<div class="alert alert-warning" role="alert">您已操作失败两次，还有最后一次机会</div>
<div class="alert alert-danger" role="alert">对不起，您输入的密码有误</div>

可关闭警示框：div中加入.alert-dismissable,button的class中加入.close,加入自定义属性data-dismiss="alert"
<div class="alert alert-success alert-dismissable" role="alert">
    <button class="close" type="button" data-dismiss="alert">&times;</button>
  恭喜您操作成功！
</div>

警示框的链接
<div class="alert alert-success" role="alert">
    <strong>Well done!</strong> 
    You successfully read 
    <a href="#" class="alert-link">this important alert message</a>//加入.alert-link
    .
</div>

进度条

基本样式:
<div class="progress progress-striped active">
       <div class="progress-bar" style="width:40%">xxx</div>加入的xxx可以显示在进度条中
</div>
里面的div的class可以追加以下不同颜色的进度条
progress-bar-info：表示信息进度条，进度条颜色为蓝色
progress-bar-success：表示成功进度条，进度条颜色为绿色
progress-bar-warning：表示警告进度条，进度条颜色为黄色
progress-bar-danger：表示错误进度条，进度条颜色为红色
也可以外层div追加.progress-striped,是条纹进度条,原理是CSS3的线性渐变来实现的。.active可以变成动态进度条，原理可以看网上

层叠进度条：也就是进度条叠加，但是宽度不能大于100%
<div class="progress active">
  <div class="progress-bar progress-bar-success progress-bar-striped" style="width:20%"></div>
  <div class="progress-bar progress-bar-info progress-bar-striped" style="width:20%"></div>
  <div class="progress-bar progress-bar-striped progress-bar-warning" style="width:30%"></div>
  <div class="progress-bar progress-bar-danger progress-bar-striped" style="width:15%"></div>
</div>

媒体对象:.media是最外层的，.media-object一般用图片等, .media-body一般用图片周边的内容, .media-heading一般标题
<div class="media">
    <a class="pull-left" href="#"> //pull-left用来控制object的浮动
      <img class="media-object" src="http://img.mukewang.com/52e1d29d000161fe06000338-300-170.jpg" alt="...">
    </a>
    <div class="media-body">
      <h4 class="media-heading">系列：十天精通CSS3</h4>
      <div>全方位深刻详解CSS3模块知识，经典案例分析，代码同步调试，让网页穿上绚丽装备！</div>
      <div class="media">.....</div> //这里可以嵌套另一个media
    </div>
</div>


媒体对象列表:用ul li 来做
<ul class="media-list">
    <li class="media">//相当于上面的div
        <a class="pull-left" href="#">
            <img class="media-object" src=" " alt="...">
        </a>
        <div class="media-body">
            <h4 class="media-heading">Media Header</h4>
            <div>…</div>
        </div>
    </li>
    <li class="media">…</li>
    <li class="media">…</li>
</ul>

网页版listview：
基础列表组:
<ul class="list-group"> //.list-group容器的css，也可以是ol,div
  <li class="list-group-item">揭开CSS3的面纱</li>  //.list-group-item列表项容器，也可以是div
  <li class="list-group-item"><span class="badge">13</span>CSS3选择器</li> //带徽章的项目，会显示在最右边，原理就是float：right
  <li class="list-group-item">CSS3边框</li>
  <li class="list-group-item">CSS3背景</li>
  <li class="list-group-item">CSS3文本</li>
</ul>

可以带连接效果：不同于以上，用div+a的组合，可以让每项a都有连接的效果，
<div class="list-group">
    <a href="##" class="list-group-item">
        <h4 class="list-group-item-heading">图解CSS3</h4> //.list-group-item-heading定义标题
        <p class="list-group-item-text">...</p> //.ist-group-item-text定义内容
    </a>
    <a href="##" class="list-group-item disabled"></a> //禁用
    <a href="##" class="list-group-item active">玩转Bootstrap</a> //非禁用
</div>

可在list-group-item的基础上追加如下，表示不同颜色的项：
list-group-item-success：成功，背景色绿色
list-group-item-info：信息，背景色蓝色
list-group-item-warning：警告，背景色为黄色
list-group-item-danger：错误，背景色为红色


基础面板,就看出一个div，panel控制大小，panel-default控制颜色，panel-body中放内容,主要控制padding:15px
<div class="panel panel-default">
    <div class="panel-heading">图解CSS3</div> //.panel-heading加入头部
    <div class="panel-body">我是一个基础面板，带有默认主题样式风格</div>
    <div class="panel-footer">作者：大漠</div> //.panel-footer加入尾部
</div>

panel-default可以用以下替换,使面板变成不同颜色:
panel-primary：重点蓝
panel-success：成功绿
panel-info:信息蓝
panel-warning：警告黄
panel-danger：危险红

面板嵌套表格:
<div class="panel panel-default">
    <div class="panel-heading">图解CSS3</div>
    <div class="panel-body">…</div>
    <table class="table table-bordered">…</table> //这个table也可以放在上一行的panel-body内，不过这样这个表格就会和周围有边距
    <ul class="list-group"> //同理，也可以嵌套一个列表组
        <li class="list-group-item">我是列表项</li>
        <li class="list-group-item">我是列表项</li>
        <li class="list-group-item">我是列表项</li>
    </ul>
    <div class="panel-footer">作者：大漠</div>
</div>

---------------------------------------------------------------------
js篇

动画过渡：只要引入js包?


模态弹出框（Modals）：

<div class="modal show bs-example-modal-lg">  //上面按钮可以通过.bs-example-modal-lg来打开摸态窗口
    <div class="modal-dialog">
        <div class="modal-content">
                <div class="modal-header"></div>

                <div class="modal-body">
                  <p>模态弹出窗主体内容</p>
                </div>

                <div class="modal-footer"></div>
        </div>
    </div>
</div>

水平居中:
.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px;
}

三种触发方式:
1. <button type="button" data-toggle="modal" data-target="#mymodal" class="btn btn-primary">点击我会弹出模态弹出窗</button> //设置data-toggle="modal" ，data-target=""设置id或者css
2. <a data-toggle="modal" href="#mymodal" class=" btn btn-primary" >点击我会弹出模态弹出窗</a> //通过a标签也可以，data-toggle="modal"同上，触发可以通过href,建议还是用data-target，以免和链接地址冲突
3. 通过javascript触发，如下:
    $(function(){
      $(".btn").click(function(){
        $("#mymodal").modal();
          keyboard:false  //意义和下面的其他属性一样
          backdrop:false
          show:false
          remote:xxxx  //同下面其他属性中的url
      });
    });


过渡动画:modal后追加fade就可以
原理：
.modal.fade .modal-dialog {
  -webkit-transition: -webkit-transform .3s ease-out;
       -o-transition:      -o-transform .3s ease-out;
          transition:         transform .3s ease-out;
  -webkit-transform: translate3d(0, -25%, 0);
       -o-transform: translate3d(0, -25%, 0);
          transform: translate3d(0, -25%, 0);
}

.modal.in .modal-dialog {
  -webkit-transform: translate3d(0, 0, 0);
       -o-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
}

其他属性：
data-backdrop="false": true 背景有遮罩(默认也是true)，false背景无遮罩
data-keyboard="true": true可以用ESC关闭(默认也是true),false不可以用ESC关闭
data-show="true"：初始化时，弹出框是否显示
href: a标签中，如果href不是以#开头，则会读取网址内容替换原来的modal-content

也是一种弹出方法
$(function(){
    $(".btn").click(function(){
      $("#mymodal").modal("xx"); //xx可以是show,hide,toggle
    });
  });

模态弹出事件（不太懂，可以再看看）
show.bs.modal
shown.bs.modal
hide.bs.modal
hidden.bs.modal


